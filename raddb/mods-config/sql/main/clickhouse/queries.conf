sql_user_name = "%{User-Name}"

event_timestamp_epoch = "%{%{integer:Event-Timestamp}:-%l}"
event_timestamp = "FROM_UNIXTIME(${event_timestamp_epoch})"

accounting {
  reference = "%{tolower:type.%{%{Acct-Status-Type}:-%{Request-Processing-Stage}}.query}"

  # Write SQL queries to a logfile. This is potentially useful for bulk inserts
  # when used with the rlm_sql_null driver.
  # logfile = ${logdir}/accounting.sql

  column_list_start = "\
    EventTimestamp, \
    AcctSessionId, \
    AcctUniqueId, \
    UserName, \
    Realm, \
    NASIPAddress, \
    NASPortId, \
    NASPortType, \
    AcctStatusType, \
    AcctStartTime, \
    AcctAuthentic, \
    ConnectInfoStart, \
    CalledStationId, \
    CallingStationId, \
    ServiceType, \
    FramedProtocol, \
    FramedIPAddress, \
    FramedIPv6Address, \
    FramedIPv6Prefix, \
    FramedIPv6PrefixSize, \
    FramedInterfaceId, \
    DelegatedIPv6Prefix, \
    DelegatedIPv6PrefixSize"

  column_list_interim_update = "\
    EventTimestamp, \
    AcctSessionId, \
    AcctUniqueId, \
    UserName, \
    Realm, \
    AcctStatusType, \
    AcctInputOctets, \
    AcctOutputOctets, \
    FramedIPAddress, \
    FramedIPv6Address, \
    FramedIPv6Prefix, \
    FramedIPv6PrefixSize, \
    FramedInterfaceId, \
    DelegatedIPv6Prefix, \
    DelegatedIPv6PrefixSize"

  column_list_stop = "\
    EventTimestamp, \
    AcctSessionId, \
    AcctUniqueId, \
    UserName, \
    Realm, \
    AcctStatusType, \
    AcctStopTime, \
    AcctInputOctets, \
    AcctOutputOctets, \
    AcctTerminateCause, \
    FramedIPAddress, \
    FramedIPv6Address, \
    FramedIPv6Prefix, \
    FramedIPv6PrefixSize, \
    FramedInterfaceId, \
    DelegatedIPv6Prefix, \
    DelegatedIPv6PrefixSize, \
    ConnectInfoStop"

  column_list_accounting_on_off = "\
    EventTimestamp, \
    AcctSessionId, \
    AcctUniqueId, \
    UserName, \
    Realm, \
    AcctStatusType, \
    AcctStopTime, \
    AcctTerminateCause"

  type {
    accounting-on {
      query = "\
        INSERT INTO ${....acct_table1} \
          (${...column_list_accounting_on_off}) \
        SELECT \
          ${....event_timestamp}, \
          AcctSessionId, \
          AcctUniqueId, \
          UserName, \
          Realm, \
          'Stop', \
          ${....event_timestamp}, \
          '%{%{Acct-Terminate-Cause}:-NAS-Reboot}' \
        FROM ( \
          SELECT \
            AcctSessionId, \
            AcctUniqueId, \
            UserName, \
            Realm, \
            anyLastIfMerge(NASIPAddress) AS NASIPAddress, \
            minMerge(AcctStartTime) AS AcctStartTime, \
            maxMerge(AcctStopTime)  AS AcctStopTime \
          FROM radacct_live \
          GROUP BY \
            AcctSessionId, \
            AcctUniqueId, \
            UserName, \
            Realm \
        ) \
        WHERE AcctStopTime IS NULL \
          AND NASIPAddress = coalesce(toIPv6(nullif('%{NAS-IPv6-Address}', '')), \
                                      IPv4ToIPv6(toIPv4('%{NAS-IP-Address}'))) \
          AND AcctStartTime <= ${....event_timestamp}"
    }

    accounting-off {
      query = "${..accounting-on.query}"
    }

    post-auth {
      query = "\
        INSERT INTO ${....acct_table1} \
          (${...column_list_start}) \
        SELECT \
          ${....event_timestamp}, \
          '%{Acct-Session-Id}', \
          '%{Acct-Unique-Session-Id}', \
          '%{SQL-User-Name}', \
          '%{Realm}', \
          coalesce(toIPv6(nullif('%{NAS-IPv6-Address}', '')), \
                   IPv4ToIPv6(toIPv4('%{NAS-IP-Address}'))), \
          nullIf('%{%{NAS-Port-ID}:-%{NAS-Port}}', ''), \
          '%{NAS-Port-Type}', \
          '%{Acct-Status-Type}', \
          ${....event_timestamp}, \
          '%{Acct-Authentic}', \
          nullIf('%{Connect-Info}', ''), \
          '%{Called-Station-Id}', \
          '%{Calling-Station-Id}', \
          nullIf('%{Service-Type}', ''), \
          nullIf('%{Framed-Protocol}', ''), \
          toIPv4(nullIf('%{Framed-IP-Address}', '')), \
          toIPv6(nullIf('%{Framed-IPv6-Address}', '')), \
          toIPv6(nullIf(splitByString('/', '%{Framed-IPv6-Prefix}')[1], '')), \
          toUInt8OrNull(splitByString('/', '%{Framed-IPv6-Prefix}')[-1]), \
          nullIf('%{Framed-Interface-Id}', ''), \
          toIPv6(nullIf(splitByString('/', '%{Delegated-IPv6-Prefix}')[1], '')), \
          toUInt8OrNull(splitByString('/', '%{Delegated-IPv6-Prefix}')[-1])"
    }

    start {
      query = "\
        INSERT INTO ${....acct_table1} \
          (${...column_list_start}) \
        SELECT \
          ${....event_timestamp}, \
          '%{Acct-Session-Id}', \
          '%{Acct-Unique-Session-Id}', \
          '%{SQL-User-Name}', \
          '%{Realm}', \
          coalesce(toIPv6(nullif('%{NAS-IPv6-Address}', '')), \
                   IPv4ToIPv6(toIPv4('%{NAS-IP-Address}'))), \
          nullIf('%{%{NAS-Port-ID}:-%{NAS-Port}}', ''), \
          '%{NAS-Port-Type}', \
          '%{Acct-Status-Type}', \
          ${....event_timestamp}, \
          '%{Acct-Authentic}', \
          nullIf('%{Connect-Info}', ''), \
          '%{Called-Station-Id}', \
          '%{Calling-Station-Id}', \
          nullIf('%{Service-Type}', ''), \
          nullIf('%{Framed-Protocol}', ''), \
          toIPv4(nullIf('%{Framed-IP-Address}', '')), \
          toIPv6(nullIf('%{Framed-IPv6-Address}', '')), \
          toIPv6(nullIf(splitByString('/', '%{Framed-IPv6-Prefix}')[1], '')), \
          toUInt8OrNull(splitByString('/', '%{Framed-IPv6-Prefix}')[-1]), \
          nullIf('%{Framed-Interface-Id}', ''), \
          toIPv6(nullIf(splitByString('/', '%{Delegated-IPv6-Prefix}')[1], '')), \
          toUInt8OrNull(splitByString('/', '%{Delegated-IPv6-Prefix}')[-1])"
    }
    interim-update {
      query = "\
        INSERT INTO ${....acct_table1} \
          (${...column_list_interim_update}) \
        SELECT \
          ${....event_timestamp}, \
          '%{Acct-Session-Id}', \
          '%{Acct-Unique-Session-Id}', \
          '%{SQL-User-Name}', \
          '%{Realm}', \
          '%{Acct-Status-Type}', \
          bitShiftLeft(%{%{Acct-Input-Gigawords}:-0}, 32) + %{%{Acct-Input-Octets}:-0}, \
          bitShiftLeft(%{%{Acct-Output-Gigawords}:-0}, 32) + %{%{Acct-Output-Octets}:-0}, \
          toIPv4(nullIf('%{Framed-IP-Address}', '')), \
          toIPv6(nullIf('%{Framed-IPv6-Address}', '')), \
          toIPv6(nullIf(splitByString('/', '%{Framed-IPv6-Prefix}')[1], '')), \
          toUInt8OrNull(splitByString('/', '%{Framed-IPv6-Prefix}')[-1]), \
          nullIf('%{Framed-Interface-Id}', ''), \
          toIPv6(nullIf(splitByString('/', '%{Delegated-IPv6-Prefix}')[1], '')), \
          toUInt8OrNull(splitByString('/', '%{Delegated-IPv6-Prefix}')[-1])"
    }
    stop {
      query = "\
        INSERT INTO ${....acct_table1} \
          (${...column_list_stop}) \
        SELECT \
          ${....event_timestamp}, \
          '%{Acct-Session-Id}', \
          '%{Acct-Unique-Session-Id}', \
          '%{SQL-User-Name}', \
          '%{Realm}', \
          '%{Acct-Status-Type}', \
          ${....event_timestamp}, \
          bitShiftLeft(%{%{Acct-Input-Gigawords}:-0}, 32) + %{%{Acct-Input-Octets}:-0}, \
          bitShiftLeft(%{%{Acct-Output-Gigawords}:-0}, 32) + %{%{Acct-Output-Octets}:-0}, \
          '%{Acct-Terminate-Cause}', \
          toIPv4(nullIf('%{Framed-IP-Address}', '')), \
          toIPv6(nullIf('%{Framed-IPv6-Address}', '')), \
          toIPv6(nullIf(splitByString('/', '%{Framed-IPv6-Prefix}')[1], '')), \
          toUInt8OrNull(splitByString('/', '%{Framed-IPv6-Prefix}')[-1]), \
          nullIf('%{Framed-Interface-Id}', ''), \
          toIPv6(nullIf(splitByString('/', '%{Delegated-IPv6-Prefix}')[1], '')), \
          toUInt8OrNull(splitByString('/', '%{Delegated-IPv6-Prefix}')[-1]), \
          nullIf('%{Connect-Info}', '')"
    }
    accounting {
      query = "SELECT 'OK'"
    }
  }
}
